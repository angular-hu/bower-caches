{"name":"angular-hu-caches","tagline":"LocalStorage and SessionStorage angular cache with expiration and size/length - httpu.caches","body":"## httpu.caches\r\n\r\nFactory, api compatible with [`$cacheFactory`](https://docs.angularjs.org/api/ng/service/$cacheFactory), that creates [LRU caches](https://github.com/jmendiara/serialized-lru-cache) with support for:\r\n * Serialization to storage (`storage`) example: `localStorage`, `sessionStorage`\r\n * Entries expiration (`maxAge`) example: 60 seconds\r\n * Custom serialization/compression of values (`serializer`) example: [`lz-string`](https://github.com/pieroxy/lz-string) compression\r\n * Limited number of entries in the cache (`capacity`) example: 10 entries\r\n\r\n      OR\r\n\r\n * Limited length of cache (`maxLength`) example: 2 Megabytes\r\n\r\nThe returned cache is again API compatible with angular [`$cacheFactory.Cache`](https://docs.angularjs.org/api/ng/type/$cacheFactory.Cache)\r\n\r\nCharacteristics:\r\n * Items are not pro-actively pruned out as they age, but if you try to get an item that is too old,\r\n   it'll drop it and return `undefined` instead of giving it to you. A convenience `cache.prune()` method\r\n   is exported to allow you to prune the cache whenever you want\r\n * If you put more stuff in it than it can handle, then least used items items will fall out.\r\n * If you try to put an oversized thing in it, then it'll fall out right away.\r\n * Adaptation to change: serialized data is agnostic of the creation options, and you can update\r\n   your code to use a cache with different options and still use the cached data in the storage\r\n   (as long as you keep the same serializaration implementation)\r\n\r\n# Installation\r\n\r\nGet it from [bower](http://bower.io/) or directly download it.\r\n\r\n```sh\r\nbower install --save angular-hu-caches\r\n```\r\n\r\nAdd the dependencies to the HTML\r\n\r\n```html\r\n<script type=\"text/javascript\" src=\"bower_components/serialized-lru-cache/lib/lru-cache.js\"></script>\r\n<script type=\"text/javascript\" src=\"bower_components/angular-hu-cacherp/caches.js\"></script>\r\n```\r\n\r\nAdd the `httpu.caches` dependency to your App Module\r\n\r\n```js\r\nangular.module('MyApp', ['httpu.caches']);\r\n```\r\n\r\nThe `huCacheSerializableFactory` dependency is now available\r\n\r\n### Usage\r\n\r\n```js\r\n//Direct replacement of $cacheFactory, in localStorage\r\n//Creates a cache of 50 entries saved to localStorage\r\nvar cache = huCacheSerializableFactory('myCache', {\r\n  capacity: 50\r\n});\r\n\r\n//Cache whose 50 entries expire after 2 minutes, in sessionStorage\r\nvar cache = huCacheSerializableFactory('myCache', {\r\n  capacity: 50,\r\n  maxAge: 2 * 60 * 1000, //2 minutes in milliseconds\r\n  storage: $window.sessionStorage\r\n});\r\n\r\n//2 MB cache whose entries expire after 10 minutes, in localStorage\r\nvar cache = huCacheSerializableFactory('myCache', {\r\n  maxLength: 2 * 1024 * 1024, // 2MB of chars\r\n  maxAge: 10 * 60 * 1000 //10 minutes in milliseconds\r\n});\r\n\r\n//1MB cache with compression in local storage\r\n//You must create a dependency with the folling API\r\nangular.module('myApp').factory('myCompressSerializer', function($window) {\r\n  //add lz-string module to your included scripts\r\n  //https://github.com/pieroxy/lz-string\r\n  return {\r\n     stringify: function(obj) {\r\n       return $window.LZString.compress(JSON.stringify(obj));\r\n     },\r\n     parse: function(str) {\r\n       return JSON.parse($window.LZString.decompress(str));\r\n     }\r\n  };\r\n});\r\n\r\nvar cache = huCacheSerializableFactory('myCache', {\r\n  maxLength: 1 * 1024 * 1024, // 1MB of compressed chars\r\n  serializer: 'myCompressSerializer'\r\n});\r\n\r\n```\r\n\r\n### Use cases\r\n\r\n* You want to save caches to a storage to allow returning users to read from them\r\n* You want to limit the amount of data stored instead of the number of requests\r\n* You want entries to expire after some time\r\n* You want to compress the data to allow more request to be cached in the 5MB storage that the browsers are giving\r\n* You want to resize your caches with new options for returning visitors\r\n\r\n## LICENSE\r\n\r\nThe MIT License ([MIT](LICENSE))\r\n\r\nCopyright (c) 2015 Telef√≥nica I+D - http://www.tid.es\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}